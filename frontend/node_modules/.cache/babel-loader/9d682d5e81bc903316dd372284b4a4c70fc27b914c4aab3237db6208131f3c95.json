{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kfirt\\\\WebstormProjects\\\\fed-cost-manager\\\\src\\\\report.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './addcost.css';\nimport { useState, useEffect } from 'react';\nimport LocalStorage from \"./localStorage\";\nimport AddCostPage from \"./addcost\";\nimport './report.css';\n\n// Components from MUI lib\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\nimport Slider from '@mui/material/Slider';\nimport Assessment from \"@mui/icons-material/Assessment\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction valuetext(value) {\n  return `${value}`;\n}\nconst GetReportPage = () => {\n  _s();\n  useEffect(() => {\n    document.title = 'Get Report';\n  }, []);\n  useEffect(() => {\n    // This useEffect hook retrieves the inputs saved in local storage and sets them to the inputs state variable\n    const inputsFromLocalStorage = LocalStorage.get('inputs');\n    if (inputsFromLocalStorage) {\n      setInputs(inputsFromLocalStorage);\n    }\n  }, []);\n\n  // These state variables are used to store the values of the inputs\n  const [year, setYear] = useState('');\n  const [month, setMonth] = useState('');\n  const [inputs, setInputs] = useState([]);\n  var index = 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"get-report-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Cost Manager App\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }, this), \"Please insert the date you want to get report\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"get-report-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"get-report-year\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"get-report-form-labels\",\n          children: \"Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: 300\n          },\n          spacing: 1,\n          direction: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            \"aria-label\": \"year\",\n            color: \"secondary\",\n            \"aria-labelledby\": 'year',\n            orientation: \"horizontal\",\n            getAriaValueText: valuetext,\n            valueLabelDisplay: \"auto\",\n            min: 1900,\n            max: 2023,\n            defaultValue: 1900,\n            onChange: e => setYear(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"get-report-month\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"get-report-form-labels\",\n          children: \"Month:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: 300\n          },\n          spacing: 1,\n          direction: \"row\",\n          children: /*#__PURE__*/_jsxDEV(Slider, {\n            \"aria-label\": \"year\",\n            color: \"secondary\",\n            \"aria-labelledby\": 'year',\n            orientation: \"horizontal\",\n            getAriaValueText: valuetext,\n            valueLabelDisplay: \"auto\",\n            min: 1,\n            max: 12,\n            defaultValue: 1,\n            onChange: e => setMonth(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"get-report-form-button\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: \"True\",\n          variant: \"outlined\",\n          color: \"secondary\",\n          endIcon: /*#__PURE__*/_jsxDEV(Assessment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 92\n          }, this),\n          onClick: () => {\n            // Passing the inputs into an array\n            setInputs([...inputs, {\n              year,\n              month\n            }]);\n            alert(\"Report\");\n          },\n          children: \"Get Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Index\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Currency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: inputs.map(input => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index++\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: input.sum\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: input.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: input.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: input.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: input.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(GetReportPage, \"txu3YHRjV2EwcLhaDPb3BwyJhik=\");\n_c = GetReportPage;\nexport default GetReportPage;\nvar _c;\n$RefreshReg$(_c, \"GetReportPage\");","map":{"version":3,"names":["React","useState","useEffect","LocalStorage","AddCostPage","Button","Stack","Slider","Assessment","DeleteIcon","valuetext","value","GetReportPage","document","title","inputsFromLocalStorage","get","setInputs","year","setYear","month","setMonth","inputs","index","width","e","target","alert","map","input","sum","category","currency","date","description"],"sources":["C:/Users/Kfirt/WebstormProjects/fed-cost-manager/src/report.js"],"sourcesContent":["import React from 'react';\r\nimport './addcost.css';\r\nimport {useState, useEffect} from 'react';\r\nimport LocalStorage from \"./localStorage\";\r\nimport AddCostPage from \"./addcost\";\r\nimport './report.css'\r\n\r\n// Components from MUI lib\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport Slider from '@mui/material/Slider';\r\nimport Assessment from \"@mui/icons-material/Assessment\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\nconst GetReportPage = () => {\r\n\r\n    useEffect(() => {\r\n        document.title = 'Get Report';\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // This useEffect hook retrieves the inputs saved in local storage and sets them to the inputs state variable\r\n        const inputsFromLocalStorage = LocalStorage.get('inputs');\r\n        if (inputsFromLocalStorage) {\r\n            setInputs(inputsFromLocalStorage);\r\n        }\r\n    }, []);\r\n\r\n    // These state variables are used to store the values of the inputs\r\n    const [year, setYear] = useState('');\r\n    const [month, setMonth] = useState('');\r\n    const [inputs, setInputs] = useState([]);\r\n\r\n    var index = 1;\r\n\r\n    return (\r\n        <div className=\"get-report-page\">\r\n            <h1>Cost Manager App<br/>\r\n                Please insert the date you want to get report</h1>\r\n            <div className=\"get-report-form\">\r\n                    <div className=\"get-report-year\">\r\n                        <label className='get-report-form-labels'>Year:</label>\r\n                        <Stack sx={{ width: 300 }} spacing={1} direction=\"row\">\r\n                            <Slider\r\n                                aria-label=\"year\"\r\n                                color={\"secondary\"}\r\n                                aria-labelledby={'year'}\r\n                                orientation=\"horizontal\"\r\n                                getAriaValueText={valuetext}\r\n                                valueLabelDisplay=\"auto\"\r\n                                min={1900}\r\n                                max={2023}\r\n                                defaultValue={1900}\r\n                                onChange={e => setYear(e.target.value)} required\r\n                            />\r\n                        </Stack>\r\n                    </div>\r\n\r\n                <div className=\"get-report-month\">\r\n                    <label className='get-report-form-labels'>Month:</label>\r\n                    <Stack sx={{ width: 300 }} spacing={1} direction=\"row\">\r\n                        <Slider\r\n                            aria-label=\"year\"\r\n                            color={\"secondary\"}\r\n                            aria-labelledby={'year'}\r\n                            orientation=\"horizontal\"\r\n                            getAriaValueText={valuetext}\r\n                            valueLabelDisplay=\"auto\"\r\n                            min={1}\r\n                            max={12}\r\n                            defaultValue={1}\r\n                            onChange={e => setMonth(e.target.value)} required\r\n                        />\r\n                    </Stack>\r\n                </div>\r\n\r\n                <div className=\"get-report-form-button\">\r\n                    <Button fullWidth='True' variant=\"outlined\" color=\"secondary\" endIcon={<Assessment />}\r\n                    onClick={() => {\r\n\r\n                        // Passing the inputs into an array\r\n                        setInputs([...inputs, {year, month}]);\r\n\r\n                        alert(\"Report\");\r\n\r\n                    }}>Get Report\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>Index</th>\r\n                    <th>Sum</th>\r\n                    <th>Category</th>\r\n                    <th>Currency</th>\r\n                    <th>Date</th>\r\n                    <th>Description</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n\r\n                {inputs.map((input) => (\r\n                    <tr>\r\n                        <td>{index++}</td>\r\n                        <td>{input.sum}</td>\r\n                        <td>{input.category}</td>\r\n                        <td>{input.currency}</td>\r\n                        <td>{input.date}</td>\r\n                        <td>{input.description}</td>\r\n\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetReportPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}