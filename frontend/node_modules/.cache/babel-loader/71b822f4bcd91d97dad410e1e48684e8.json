{"ast":null,"code":"/*! clipboard-copy. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* global DOMException */\n\nmodule.exports = clipboardCopy;\nfunction makeError() {\n  return new DOMException('The request is not allowed', 'NotAllowedError');\n}\nasync function copyClipboardApi(text) {\n  // Use the Async Clipboard API when available. Requires a secure browsing\n  // context (i.e. HTTPS)\n  if (!navigator.clipboard) {\n    throw makeError();\n  }\n  return navigator.clipboard.writeText(text);\n}\nasync function copyExecCommand(text) {\n  // Put the text to copy into a <span>\n  const span = document.createElement('span');\n  span.textContent = text;\n\n  // Preserve consecutive spaces and newlines\n  span.style.whiteSpace = 'pre';\n  span.style.webkitUserSelect = 'auto';\n  span.style.userSelect = 'all';\n\n  // Add the <span> to the page\n  document.body.appendChild(span);\n\n  // Make a selection object representing the range of text selected by the user\n  const selection = window.getSelection();\n  const range = window.document.createRange();\n  selection.removeAllRanges();\n  range.selectNode(span);\n  selection.addRange(range);\n\n  // Copy text to the clipboard\n  let success = false;\n  try {\n    success = window.document.execCommand('copy');\n  } finally {\n    // Cleanup\n    selection.removeAllRanges();\n    window.document.body.removeChild(span);\n  }\n  if (!success) throw makeError();\n}\nasync function clipboardCopy(text) {\n  try {\n    await copyClipboardApi(text);\n  } catch (err) {\n    // ...Otherwise, use document.execCommand() fallback\n    try {\n      await copyExecCommand(text);\n    } catch (err2) {\n      throw err2 || err || makeError();\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"script"}