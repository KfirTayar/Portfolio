{"ast":null,"code":"// Kfir Tayar 208991430\n// Adi Gertel\n\nconst LocalStorage = {\n  // Returns object with filtered costs by year and month\n  async getFilteredReport(month, year, key) {\n    const unfilteredTable = JSON.parse(localStorage.getItem(key));\n    const filteredByMonthAndYear = unfilteredTable.filter(cost => month === parseInt(cost.date.slice(5, 7)) && year === parseInt(cost.date.slice(0, 4)));\n    return filteredByMonthAndYear;\n  },\n  // Returns the sum of the filtered report\n  async getFilteredTotalSum(month, year, key) {\n    let Totalsum = 0;\n    const unfilteredTable = JSON.parse(localStorage.getItem(key));\n    const filteredByMonthAndYear = unfilteredTable.filter(cost => month === parseInt(cost.date.slice(5, 7)) && year === parseInt(cost.date.slice(0, 4)));\n    let filteredReportTotalSum = filteredByMonthAndYear.map(cost => Totalsum = Totalsum + parseInt(cost.sum));\n    filteredReportTotalSum = filteredReportTotalSum[filteredReportTotalSum.length - 1];\n    return filteredReportTotalSum;\n  },\n  // Return the costs object from the local storage\n  async getCosts(key) {\n    return JSON.parse(localStorage.getItem(key));\n  },\n  // Add an array that represent a cost into the local storage\n  async addCost(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport default LocalStorage;","map":{"version":3,"names":["LocalStorage","getFilteredReport","month","year","key","unfilteredTable","JSON","parse","localStorage","getItem","filteredByMonthAndYear","filter","cost","parseInt","date","slice","getFilteredTotalSum","Totalsum","filteredReportTotalSum","map","sum","length","getCosts","addCost","value","setItem","stringify"],"sources":["C:/Users/Kfirt/WebstormProjects/fed-cost-manager/src/localStorage.js"],"sourcesContent":["// Kfir Tayar 208991430\r\n// Adi Gertel\r\n\r\nconst LocalStorage = {\r\n\r\n    // Returns object with filtered costs by year and month\r\n    async getFilteredReport(month, year, key) {\r\n        const unfilteredTable = JSON.parse(localStorage.getItem(key));\r\n        const filteredByMonthAndYear = unfilteredTable.filter(cost =>\r\n            (month === parseInt(cost.date.slice(5,7))) && (year === parseInt(cost.date.slice(0,4))));\r\n\r\n        return filteredByMonthAndYear;\r\n    },\r\n\r\n    // Returns the sum of the filtered report\r\n     async getFilteredTotalSum(month, year, key) {\r\n        let Totalsum = 0;\r\n        const unfilteredTable = JSON.parse(localStorage.getItem(key));\r\n        const filteredByMonthAndYear = unfilteredTable.filter(cost =>\r\n            (month === parseInt(cost.date.slice(5,7))) && (year === parseInt(cost.date.slice(0,4))));\r\n        let filteredReportTotalSum = filteredByMonthAndYear.map(cost => (Totalsum = Totalsum + parseInt(cost.sum)));\r\n         filteredReportTotalSum = filteredReportTotalSum[(filteredReportTotalSum.length) - 1];\r\n        return filteredReportTotalSum;\r\n    },\r\n\r\n    // Return the costs object from the local storage\r\n    async getCosts(key){\r\n      return JSON.parse(localStorage.getItem(key));\r\n    },\r\n\r\n    // Add an array that represent a cost into the local storage\r\n    async addCost(key, value) {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    },\r\n};\r\n\r\nexport default LocalStorage;\r\n"],"mappings":"AAAA;AACA;;AAEA,MAAMA,YAAY,GAAG;EAEjB;EACA,MAAMC,iBAAiB,CAACC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAE;IACtC,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC,CAAC;IAC7D,MAAMM,sBAAsB,GAAGL,eAAe,CAACM,MAAM,CAACC,IAAI,IACrDV,KAAK,KAAKW,QAAQ,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,IAAMZ,IAAI,KAAKU,QAAQ,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAE,CAAC;IAE5F,OAAOL,sBAAsB;EACjC,CAAC;EAED;EACC,MAAMM,mBAAmB,CAACd,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAE;IACzC,IAAIa,QAAQ,GAAG,CAAC;IAChB,MAAMZ,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC,CAAC;IAC7D,MAAMM,sBAAsB,GAAGL,eAAe,CAACM,MAAM,CAACC,IAAI,IACrDV,KAAK,KAAKW,QAAQ,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,IAAMZ,IAAI,KAAKU,QAAQ,CAACD,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,CAAE,CAAC;IAC5F,IAAIG,sBAAsB,GAAGR,sBAAsB,CAACS,GAAG,CAACP,IAAI,IAAKK,QAAQ,GAAGA,QAAQ,GAAGJ,QAAQ,CAACD,IAAI,CAACQ,GAAG,CAAE,CAAC;IAC1GF,sBAAsB,GAAGA,sBAAsB,CAAEA,sBAAsB,CAACG,MAAM,GAAI,CAAC,CAAC;IACrF,OAAOH,sBAAsB;EACjC,CAAC;EAED;EACA,MAAMI,QAAQ,CAAClB,GAAG,EAAC;IACjB,OAAOE,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACL,GAAG,CAAC,CAAC;EAC9C,CAAC;EAED;EACA,MAAMmB,OAAO,CAACnB,GAAG,EAAEoB,KAAK,EAAE;IACtBhB,YAAY,CAACiB,OAAO,CAACrB,GAAG,EAAEE,IAAI,CAACoB,SAAS,CAACF,KAAK,CAAC,CAAC;EACpD;AACJ,CAAC;AAED,eAAexB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}