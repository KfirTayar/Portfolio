{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kfirt\\\\WebstormProjects\\\\fed-cost-manager\\\\src\\\\about.js\";\nimport './about.css';\n/*\r\nconst developers = [\r\n    {\r\n        firstname: \"Kfir\",\r\n        lastname: \"Tayar\",\r\n        id: 208991430,\r\n        email:\"kfirtayar145@gmail.com\"\r\n    },\r\n    {\r\n        firstname: \"Adi\",\r\n        lastname: \"\",\r\n        id: 1,\r\n        email:\"\"\r\n    }\r\n];\r\n\r\nfunction about() {\r\n    return (\r\n        <div className=\"developers\">\r\n            {developers.map((developer) => (\r\n                <>\r\n                    firstname={developer.firstname}\r\n                    lastname={developer.lastname}\r\n                    id={developer.id}\r\n                    email={developer.email}\r\n               </>\r\n            ))};\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default about();*/\nimport { PureComponent } from 'react';\n\n// import styles of this component\nimport styles from \"./FormInput.module.css\";\n// import react bootstrap components\nimport { FormGroup, FormLabel, FormControl, FormText } from 'react-bootstrap';\n// import pkgs\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass FormInput extends PureComponent {\n  render() {\n    // props\n    const {\n      inpClass = '',\n      className = '',\n      controlId,\n      name,\n      text,\n      placeholder,\n      type = \"text\",\n      as,\n      errMsg,\n      successMsg,\n      valid,\n      invalid,\n      size = 'md',\n      value,\n      onChange,\n      xs,\n      sm,\n      md,\n      lg\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(FormGroup, {\n      controlId: controlId,\n      className: className,\n      as: as,\n      xs: xs,\n      sm: sm,\n      md: md,\n      lg: lg,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        className: styles['form-label'],\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        isInvalid: invalid,\n        isValid: valid,\n        type: type,\n        className: `${styles[\"form-input\"]} ${inpClass}`,\n        size: size,\n        placeholder: placeholder,\n        autoComplete: \"off\",\n        name: name,\n        value: value,\n        onChange: onChange,\n        spellCheck: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), invalid && /*#__PURE__*/_jsxDEV(FormText, {\n        className: \"text-danger\",\n        children: errMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }, this), valid && /*#__PURE__*/_jsxDEV(FormText, {\n        className: \"text-success\",\n        children: successMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n// validate this component\nFormInput.propTypes = {\n  inpClass: PropTypes.string,\n  className: PropTypes.string,\n  controlId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  as: PropTypes.elementType,\n  errMsg: PropTypes.string.isRequired,\n  successMsg: PropTypes.string.isRequired,\n  valid: PropTypes.bool.isRequired,\n  invalid: PropTypes.bool.isRequired,\n  size: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default FormInput;","map":{"version":3,"names":["PureComponent","styles","FormGroup","FormLabel","FormControl","FormText","PropTypes","FormInput","render","inpClass","className","controlId","name","text","placeholder","type","as","errMsg","successMsg","valid","invalid","size","value","onChange","xs","sm","md","lg","props","propTypes","string","isRequired","elementType","bool","func"],"sources":["C:/Users/Kfirt/WebstormProjects/fed-cost-manager/src/about.js"],"sourcesContent":["import './about.css'\r\n/*\r\nconst developers = [\r\n    {\r\n        firstname: \"Kfir\",\r\n        lastname: \"Tayar\",\r\n        id: 208991430,\r\n        email:\"kfirtayar145@gmail.com\"\r\n    },\r\n    {\r\n        firstname: \"Adi\",\r\n        lastname: \"\",\r\n        id: 1,\r\n        email:\"\"\r\n    }\r\n];\r\n\r\nfunction about() {\r\n    return (\r\n        <div className=\"developers\">\r\n            {developers.map((developer) => (\r\n                <>\r\n                    firstname={developer.firstname}\r\n                    lastname={developer.lastname}\r\n                    id={developer.id}\r\n                    email={developer.email}\r\n               </>\r\n            ))};\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default about();*/\r\nimport { PureComponent } from 'react'\r\n\r\n// import styles of this component\r\nimport styles from \"./FormInput.module.css\"\r\n// import react bootstrap components\r\nimport { FormGroup, FormLabel, FormControl, FormText } from 'react-bootstrap'\r\n// import pkgs\r\nimport PropTypes  from 'prop-types'\r\n\r\nclass FormInput extends PureComponent {\r\n    render() {\r\n        // props\r\n        const {\r\n            inpClass='',\r\n            className='',\r\n            controlId,\r\n            name,\r\n            text,\r\n            placeholder,\r\n            type=\"text\",\r\n            as,\r\n            errMsg,\r\n            successMsg,\r\n            valid,\r\n            invalid,\r\n            size='md',\r\n            value,\r\n            onChange,\r\n            xs,\r\n            sm,\r\n            md,\r\n            lg,\r\n        } = this.props\r\n\r\n        return (\r\n            <FormGroup controlId={controlId} className={className} as={as} xs={xs} sm={sm} md={md} lg={lg}>\r\n                <FormLabel className={styles['form-label']}>{text}</FormLabel>\r\n                <FormControl\r\n                    isInvalid={invalid}\r\n                    isValid={valid}\r\n                    type={type}\r\n                    className={`${styles[\"form-input\"]} ${inpClass}`}\r\n                    size={size}\r\n                    placeholder={placeholder}\r\n                    autoComplete=\"off\"\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    spellCheck=\"off\"\r\n                />\r\n                {invalid && <FormText className=\"text-danger\">{ errMsg }</FormText>}\r\n                {valid && <FormText className=\"text-success\">{ successMsg }</FormText>}\r\n            </FormGroup>\r\n        )\r\n    }\r\n}\r\n\r\n// validate this component\r\nFormInput.propTypes = {\r\n    inpClass: PropTypes.string,\r\n    className: PropTypes.string,\r\n    controlId: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    as: PropTypes.elementType,\r\n    errMsg: PropTypes.string.isRequired,\r\n    successMsg: PropTypes.string.isRequired,\r\n    valid: PropTypes.bool.isRequired,\r\n    invalid: PropTypes.bool.isRequired,\r\n    size: PropTypes.string,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FormInput"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}